import http.client
import json
from urllib.parse import urlparse

# Your MCP URL
MCP_URL = "https://your.mcp.server.url"  # Replace with real one

# Parse the URL
parsed_url = urlparse(MCP_URL)
host = parsed_url.hostname
port = parsed_url.port or (443 if parsed_url.scheme == 'https' else 80)
path = parsed_url.path

# JSON body you send in Postman
MCP_PAYLOAD = {
    "method": "tools/call",
    "params": {
        "name": "get-vendors",
        "arguments": {}
    }
}

# === Fetch from MCP Server ===
def fetch_raw_from_mcp():
    try:
        print("⏳ Connecting via raw socket...")

        conn = http.client.HTTPSConnection(host, port, timeout=180)

        headers = {
            "Content-Type": "application/json",
            "Connection": "keep-alive"
        }

        body = json.dumps(MCP_PAYLOAD)

        conn.request("POST", path, body=body, headers=headers)
        response = conn.getresponse()

        raw_data = response.read().decode("utf-8", errors="ignore")

        try:
            parsed = json.loads(raw_data)
            print("✅ Parsed JSON received successfully!")
            return parsed
        except json.JSONDecodeError:
            print("⚠️ JSON decoding failed. Dumping raw response:")
            print(raw_data)
            return None

    except Exception as e:
        print(f"[ERROR] MCP raw fetch failed: {e}")
        return None


# === RUN ===
if __name__ == "__main__":
    result = fetch_raw_from_mcp()

    if result:
        print("\n✅ Final Response from MCP:\n")
        print(json.dumps(result, indent=2))
    else:
        print("\n❌ Could not decode valid JSON response.")
