import gradio as gr

# Hardcoded connector YAMLs
connector_snippets = {
    "salesforce": """Salesforce connector:
core:
  connectors:
    sfdc:
      authUrl: https://login.salesforce.com
      username: your-username
      password: your-password
      client_id: your-client_id
      client_secret: your-client-secret
      grant_type: password
      queryUrl: /
      version: v53.0""",
    "sqs": """SQS connector:
aws.region :""",
    "crossaccountsqs": """CrossAccountSQS connector:
aws.region :
crossaccount.clientId :
crossaccount.clientSecret :""",
    "s3": """S3 connector:
aws.region :""",
    "common-api-library": """common-api-library :
apiName :
apiVersion :
mandatoryHeader.skipValidation :
mandatoryHeader.excludePath :"""
}

# Detect connector-related question
def detect_connector_question(message: str) -> str:
    message_lower = message.lower()
    if "salesforce" in message_lower or "sfdc" in message_lower:
        return connector_snippets["salesforce"]
    elif "sqs" in message_lower and "cross" in message_lower:
        return connector_snippets["crossaccountsqs"]
    elif "sqs" in message_lower:
        return connector_snippets["sqs"]
    elif "s3" in message_lower:
        return connector_snippets["s3"]
    elif "common api" in message_lower or "common-api-library" in message_lower:
        return connector_snippets["common-api-library"]
    return " No matching connector found. Please ask about Salesforce, SQS, CrossAccountSQS, S3, or common-api-library."

# Chatbot logic
def chat_with_agent(message, history):
    return detect_connector_question(message)

# Gradio UI
chatbot_ui = gr.ChatInterface(
    fn=chat_with_agent,
    title=" OSIF Connector Assistant",
    description="Ask for connector configuration formats (e.g., Salesforce, SQS, S3, etc.)",
    theme="default"
)

# Launch the app
chatbot_ui.launch(debug=False)
