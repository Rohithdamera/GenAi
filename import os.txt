
combine the code 1 and code 2 into one , i will run the code in visual studio after code running in UI it will open box there i will enter the prompt , based on prompt , it will give result , but my requirement is to (give me how many debugs happened (or) what things are in log file etc , give me full updated code 

code 1:-

create a local reference to remote llm model
llm = AzureChatOpenAI(
    deployment_name="gpt-4_complex_conversions",
    azure_endpoint="https://testopenaiassets.openai.azure.com",
    openai_api_key="",
    openai_api_version="2025-01-01-preview",
    #verbose=False
)


 try:
        with get_openai_callback() as cb: # Use the callback context manager
            result = agent.invoke(
                {"messages": messages},
                config={"callbacks": [ConsoleCallbackHandler()]}
            )
            final_response = result["messages"][-1].content
            # Append the token usage and cost information to the final_response
            final_response += "\n\n--- Token Usage ---"
            final_response += f"\nTotal Tokens: {cb.total_tokens}"
            final_response += f"\nPrompt Tokens: {cb.prompt_tokens}"
            final_response += f"\nCompletion Tokens: {cb.completion_tokens}"
            final_response += f"\nTotal Cost (USD): ${format(cb.total_cost, '.6f')}"
    finally:
         print("+++")



# Create the Gradio interface
chatbot_ui = gr.ChatInterface(
    fn=chat_with_agent,
    title=" OSIF Co-Developer",
    description="Your co-developer for OSIF development",
    theme="default"
)

# Launch the app
chatbot_ui.launch(debug=False)


code:2


import json
import mysql.connector

# MySQL connection configuration
config = {
    "host": "localhost",
    "user": "root",         # 
    "password": "Admin",    # 
    "database": "test_data" # 
}



# Connect to MySQL
conn = mysql.connector.connect(**config)
cursor = conn.cursor()



prompt = (
    f"You are a senior data analyst. Analyze the following API performance data collected over the last {time_interval.lower()}.\n"
    f"Each row contains detailed metrics for the API '{api_name}'.\n"
    "Your tasks are:\n"
    "1. Provide an overall summary of the API's health.\n"
    "2. Identify any performance issues, anomalies, or error patterns.\n"
    "3. Explain potential causes for each issue.\n"
    "4. Suggest practical, data-driven solutions to improve performance.\n"
    "5. Include any trends or patterns you observe.\n\n"
    "results_str is the given data."
)



