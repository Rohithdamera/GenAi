prompt = PromptTemplate(
    input_variables=["class_name", "class_type", "package_path", "methods", "uses_repository", "entity_map"],
    template="""
Write a full JUnit 5 test class for:
Class Name: {class_name}
Type: {class_type}
Package: {package_path}
Public Methods:
{methods}
uses_repository: {uses_repository}

You also have access to the following Entity definitions with their fields:
{entity_map}

/*
Rules:
GENERAL:
- Use the real entity class name exactly as in metadata, no hardcoded "Model" suffix.
- Populate ALL fields in entity objects with realistic dummy values based on field type:
  - String → "John Doe" or descriptive string
  - UUID → UUID.randomUUID().toString()
  - Long → 1L
  - int → 123
  - boolean → true
  - LocalDateTime → "2025-07-25T10:00:00"
  - Lists → Arrays.asList(...)
- JSON property names in tests must match entity field names exactly in case.

CONTROLLER TESTS:
- Annotate class with @WebMvcTest({class_name}.class).
- Inject:
  @Autowired MockMvc mockMvc
  @MockBean {service_name} (service layer)
  @Autowired ObjectMapper objectMapper
- Use org.mockito.Mockito.when(...) and static import of org.mockito.ArgumentMatchers.any().
- Use post(...), get(...), etc. from MockMvcRequestBuilders.
- Serialize request bodies using objectMapper.writeValueAsString(entityInstance).
- Validate response with jsonPath checks matching field names exactly.
- One @Test per public method.
- No @ExtendWith in controller tests — @WebMvcTest is enough.

SERVICE TESTS:
- Do NOT use mocks unless the class uses a repository.
- If no repository: instantiate service directly with `new`.
- Use AssertJ assertions (assertThat) instead of JUnit assertEquals.
- If repository is used: annotate with @ExtendWith(MockitoExtension.class), @InjectMocks service, @Mock repository.
- Add extra tests for edge cases if meaningful (e.g., adding without id generates id).
- Populate entity fully before using.
- Ensure at least one test checks the returned value equals the saved entity.

IMPORTS:
- Include all necessary imports, do not include unused ones.
- For dates: use string ISO format as per entity field.
- For lists: use Arrays.asList.

Output ONLY the complete valid Java code. No explanation.
*/
"""
)
