
import json
import random
import string
import base64

def generate_random_value(value):
    if isinstance(value, int):
        return random.randint(1, 10000)
    elif isinstance(value, float):
        return round(random.uniform(1, 10000), 2)
    elif isinstance(value, str):
        return ''.join(random.choices(string.ascii_letters + string.digits, k=random.randint(2, 8)))
    elif isinstance(value, list):
        return [generate_random_value(v) for v in value]
    elif isinstance(value, dict):
        return {k: generate_random_value(v) for k, v in value.items()}
    else:
        return value

def lambda_handler(event, context):
    try:
        if 'body' not in event:
            return {"statusCode": 400, "body": "Missing body in request"}

        # Base64 decode the uploaded RAML file
        content = base64.b64decode(event['body']).decode('utf-8')

        # Try to extract the JSON part (RAML might contain YAML or annotations, but we assume it starts with a JSON block)
        json_start = content.find('{')
        json_data = json.loads(content[json_start:])  # Parse JSON portion only

        # Randomize values based on type
        randomized_output = generate_random_value(json_data)

        return {
            "statusCode": 200,
            "body": json.dumps(randomized_output),
            "headers": {
                "Content-Type": "application/json"
            }
        }

    except Exception as e:
        return {
            "statusCode": 500,
            "body": json.dumps({"error": str(e)}),
            "headers": {
                "Content-Type": "application/json"
            }
        }
