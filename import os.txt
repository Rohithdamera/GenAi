==================XSLT without escape characters===================
<?xml version='1.0' encoding='UTF-8'?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
  <xsl:output method="xml" indent="yes"/>
  <xsl:template match="/ImportExportItems">
    <ImportExportItems>
      <xsl:apply-templates select="Item"/>
    </ImportExportItems>
  </xsl:template>
  <xsl:template match="Item">
    <Item>
      <ID>
        <xsl:value-of select="ItemID"/>
      </ID>
      <Name>
        <xsl:value-of select="Name"/>
      </Name>
      <Category>
        <xsl:value-of select="Category"/>
      </Category>
      <Quantity>
        <xsl:value-of select="Quantity"/>
      </Quantity>
      <Unit>
        <xsl:value-of select="Unit"/>
      </Unit>
      <OriginCountry>
        <xsl:value-of select="OriginCountry"/>
      </OriginCountry>
      <DestinationCountry>
        <xsl:value-of select="DestinationCountry"/>
      </DestinationCountry>
      <ImportDate>
        <xsl:value-of select="ImportDate"/>
      </ImportDate>
    </Item>
  </xsl:template>
</xsl:stylesheet>
After Parsing
XSLT is valid and well-formed.
-----Start-Code-Generator--------
-------------------------------Generate Start State ----------------------------------------
{'xsltcode': [HumanMessage(content='<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">\n  <xsl:output method="xml" indent="yes"/>\n  <xsl:template match="/ImportExportItems">\n    <ImportExportItems>\n      <xsl:apply-templates select="Item"/>\n    </ImportExportItems>\n  </xsl:template>\n  <xsl:template match="Item">\n    <Item>\n      <ID>\n        <xsl:value-of select="ItemID"/>\n      </ID>\n      <Name>\n        <xsl:value-of select="Name"/>\n      </Name>\n      <Category>\n        <xsl:value-of select="Category"/>\n      </Category>\n      <Quantity>\n        <xsl:value-of select="Quantity"/>\n      </Quantity>\n      <Unit>\n        <xsl:value-of select="Unit"/>\n      </Unit>\n      <OriginCountry>\n        <xsl:value-of select="OriginCountry"/>\n      </OriginCountry>\n      <DestinationCountry>\n        <xsl:value-of select="DestinationCountry"/>\n      </DestinationCountry>\n      <ImportDate>\n        <xsl:value-of select="ImportDate"/>\n      </ImportDate>\n    </Item>\n  </xsl:template>\n</xsl:stylesheet>', additional_kwargs={}, response_metadata={})], 'is_valid': None}
-------------------------------Generate End State ----------------------------------------
Generate DataWeave 2.0 script for the provided XSLT script

<?xml version='1.0' encoding='UTF-8'?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
  <xsl:output method="xml" indent="yes"/>
  <xsl:template match="/ImportExportItems">
    <ImportExportItems>
      <xsl:apply-templates select="Item"/>
    </ImportExportItems>
  </xsl:template>
  <xsl:template match="Item">
    <Item>
      <ID>
        <xsl:value-of select="ItemID"/>
      </ID>
      <Name>
        <xsl:value-of select="Name"/>
      </Name>
      <Category>
        <xsl:value-of select="Category"/>
      </Category>
      <Quantity>
        <xsl:value-of select="Quantity"/>
      </Quantity>
      <Unit>
        <xsl:value-of select="Unit"/>
      </Unit>
      <OriginCountry>
        <xsl:value-of select="OriginCountry"/>
      </OriginCountry>
      <DestinationCountry>
        <xsl:value-of select="DestinationCountry"/>
      </DestinationCountry>
      <ImportDate>
        <xsl:value-of select="ImportDate"/>
      </ImportDate>
    </Item>
  </xsl:template>
</xsl:stylesheet>

[generate_code]Content:
 ```DataWeave
%dw 2.0
output application/xml
---
ImportExportItems: {
  Item: payload.ImportExportItems.*Item map ((item, index) -> {
    ID: item.ItemID,
    Name: item.Name,
    Category: item.Category,
    Quantity: item.Quantity,
    Unit: item.Unit,
    OriginCountry: item.OriginCountry,
    DestinationCountry: item.DestinationCountry,
    ImportDate: item.ImportDate
  })
}
```
-------------------------------Validate Start State ----------------------------------------
{'xsltcode': [HumanMessage(content='<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">\n  <xsl:output method="xml" indent="yes"/>\n  <xsl:template match="/ImportExportItems">\n    <ImportExportItems>\n      <xsl:apply-templates select="Item"/>\n    </ImportExportItems>\n  </xsl:template>\n  <xsl:template match="Item">\n    <Item>\n      <ID>\n        <xsl:value-of select="ItemID"/>\n      </ID>\n      <Name>\n        <xsl:value-of select="Name"/>\n      </Name>\n      <Category>\n        <xsl:value-of select="Category"/>\n      </Category>\n      <Quantity>\n        <xsl:value-of select="Quantity"/>\n      </Quantity>\n      <Unit>\n        <xsl:value-of select="Unit"/>\n      </Unit>\n      <OriginCountry>\n        <xsl:value-of select="OriginCountry"/>\n      </OriginCountry>\n      <DestinationCountry>\n        <xsl:value-of select="DestinationCountry"/>\n      </DestinationCountry>\n      <ImportDate>\n        <xsl:value-of select="ImportDate"/>\n      </ImportDate>\n    </Item>\n  </xsl:template>\n</xsl:stylesheet>', additional_kwargs={}, response_metadata={})], 'dwlcode': '```DataWeave\n%dw 2.0\noutput application/xml\n---\nImportExportItems: {\n  Item: payload.ImportExportItems.*Item map ((item, index) -> {\n    ID: item.ItemID,\n    Name: item.Name,\n    Category: item.Category,\n    Quantity: item.Quantity,\n    Unit: item.Unit,\n    OriginCountry: item.OriginCountry,\n    DestinationCountry: item.DestinationCountry,\n    ImportDate: item.ImportDate\n  })\n}\n```', 'dwl_accumulator': '', 'is_valid': None, 'retries': 0, 'df': {'Iteration': [], 'Status': [], 'Error': [], 'Input File': ['<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">\n  <xsl:output method="xml" indent="yes"/>\n  <xsl:template match="/ImportExportItems">\n    <ImportExportItems>\n      <xsl:apply-templates select="Item"/>\n    </ImportExportItems>\n  </xsl:template>\n  <xsl:template match="Item">\n    <Item>\n      <ID>\n        <xsl:value-of select="ItemID"/>\n      </ID>\n      <Name>\n        <xsl:value-of select="Name"/>\n      </Name>\n      <Category>\n        <xsl:value-of select="Category"/>\n      </Category>\n      <Quantity>\n        <xsl:value-of select="Quantity"/>\n      </Quantity>\n      <Unit>\n        <xsl:value-of select="Unit"/>\n      </Unit>\n      <OriginCountry>\n        <xsl:value-of select="OriginCountry"/>\n      </OriginCountry>\n      <DestinationCountry>\n        <xsl:value-of select="DestinationCountry"/>\n      </DestinationCountry>\n      <ImportDate>\n        <xsl:value-of select="ImportDate"/>\n      </ImportDate>\n    </Item>\n  </xsl:template>\n</xsl:stylesheet>'], 'Output File': []}}
<class 'str'>
-------------------------------Validate End State ----------------------------------------
{'isValid': True, 'errorMsg': '[]'}
-----End-Valid--------
{'result': {'xsltcode': [HumanMessage(content='<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">\n  <xsl:output method="xml" indent="yes"/>\n  <xsl:template match="/ImportExportItems">\n    <ImportExportItems>\n      <xsl:apply-templates select="Item"/>\n    </ImportExportItems>\n  </xsl:template>\n  <xsl:template match="Item">\n    <Item>\n      <ID>\n        <xsl:value-of select="ItemID"/>\n      </ID>\n      <Name>\n        <xsl:value-of select="Name"/>\n      </Name>\n      <Category>\n        <xsl:value-of select="Category"/>\n      </Category>\n      <Quantity>\n        <xsl:value-of select="Quantity"/>\n      </Quantity>\n      <Unit>\n        <xsl:value-of select="Unit"/>\n      </Unit>\n      <OriginCountry>\n        <xsl:value-of select="OriginCountry"/>\n      </OriginCountry>\n      <DestinationCountry>\n        <xsl:value-of select="DestinationCountry"/>\n      </DestinationCountry>\n      <ImportDate>\n        <xsl:value-of select="ImportDate"/>\n      </ImportDate>\n    </Item>\n  </xsl:template>\n</xsl:stylesheet>', additional_kwargs={}, response_metadata={})], 'dwlcode': '```DataWeave\n%dw 2.0\noutput application/xml\n---\nImportExportItems: {\n  Item: payload.ImportExportItems.*Item map ((item, index) -> {\n    ID: item.ItemID,\n    Name: item.Name,\n    Category: item.Category,\n    Quantity: item.Quantity,\n    Unit: item.Unit,\n    OriginCountry: item.OriginCountry,\n    DestinationCountry: item.DestinationCountry,\n    ImportDate: item.ImportDate\n  })\n}\n```', 'validation_result': '[]', 'dwl_accumulator': '<h1 style="display: inline-block;">Iteration 1 - </h1><h3 style="display: inline-block;color: green;"> Success </h3><h3>Dataweave Script</h3>Here is the generated dataweave script<br/>\n\n   ```DataWeave\n%dw 2.0\noutput application/xml\n---\nImportExportItems: {\n  Item: payload.ImportExportItems.*Item map ((item, index) -> {\n    ID: item.ItemID,\n    Name: item.Name,\n    Category: item.Category,\n    Quantity: item.Quantity,\n    Unit: item.Unit,\n    OriginCountry: item.OriginCountry,\n    DestinationCountry: item.DestinationCountry,\n    ImportDate: item.ImportDate\n  })\n}\n```\n\n   ', 'is_valid': True, 'retries': 1, 'df': {'Iteration': ['1'], 'Status': ['Success'], 'Error': ['[]'], 'Input File': ['<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">\n  <xsl:output method="xml" indent="yes"/>\n  <xsl:template match="/ImportExportItems">\n    <ImportExportItems>\n      <xsl:apply-templates select="Item"/>\n    </ImportExportItems>\n  </xsl:template>\n  <xsl:template match="Item">\n    <Item>\n      <ID>\n        <xsl:value-of select="ItemID"/>\n      </ID>\n      <Name>\n        <xsl:value-of select="Name"/>\n      </Name>\n      <Category>\n        <xsl:value-of select="Category"/>\n      </Category>\n      <Quantity>\n        <xsl:value-of select="Quantity"/>\n      </Quantity>\n      <Unit>\n        <xsl:value-of select="Unit"/>\n      </Unit>\n      <OriginCountry>\n        <xsl:value-of select="OriginCountry"/>\n      </OriginCountry>\n      <DestinationCountry>\n        <xsl:value-of select="DestinationCountry"/>\n      </DestinationCountry>\n      <ImportDate>\n        <xsl:value-of select="ImportDate"/>\n      </ImportDate>\n    </Item>\n  </xsl:template>\n</xsl:stylesheet>'], 'Output File': ['```DataWeave\n%dw 2.0\noutput application/xml\n---\nImportExportItems: {\n  Item: payload.ImportExportItems.*Item map ((item, index) -> {\n    ID: item.ItemID,\n    Name: item.Name,\n    Category: item.Category,\n    Quantity: item.Quantity,\n    Unit: item.Unit,\n    OriginCountry: item.OriginCountry,\n    DestinationCountry: item.DestinationCountry,\n    ImportDate: item.ImportDate\n  })\n}\n```']}}}
