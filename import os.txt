import json
import requests
from sseclient import SSEClient

# MCP Configuration
MCP_URL = "https://your.mcp.server.url"  # Replace with actual MCP URL
MCP_PAYLOAD = {
    "method": "tools/call",
    "params": {
        "name": "get-vendors",
        "arguments": {}
    }
}

def stream_until_vendor_data():
    try:
        print("‚è≥ Connecting to MCP server (event-stream)...")

        response = requests.post(
            MCP_URL,
            json=MCP_PAYLOAD,
            headers={"Content-Type": "application/json"},
            stream=True,
            timeout=600  # ‚è≤Ô∏è Wait up to 10 minutes if needed
        )

        print("üîÑ Listening to MCP event stream...\n")

        client = SSEClient(response)

        for event in client.events():
            print(f"üîπ Event received:")
            print(event.data.strip())

            try:
                # Attempt to parse JSON
                parsed = json.loads(event.data)
                print("\n‚úÖ Parsed JSON received!")
                return parsed
            except json.JSONDecodeError:
                continue  # Not JSON yet ‚Äî wait for next event

        print("\n‚ùå No valid vendor data was received.")
        return None

    except Exception as e:
        print(f"[ERROR] Streaming failed: {e}")
        return None

# === Run ===
if __name__ == "__main__":
    vendor_data = stream_until_vendor_data()

    if vendor_data:
        print("\n‚úÖ FINAL VENDOR DATA:\n")
        print(json.dumps(vendor_data, indent=2))
    else:
        print("\n‚ùå Vendor JSON not received from stream.")
