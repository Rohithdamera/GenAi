import React, { useState, useEffect, useRef } from 'react';
import axios from 'axios';

const Landingpage = () => {
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState('');
  const [loading, setLoading] = useState(false);
  const [callLogs, setCallLogs] = useState([]);

  const chatEndRef = useRef(null);

  useEffect(() => {
    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);

  const handleSend = async () => {
    if (!input.trim()) return;

    const userMessage = { sender: 'user', text: input };
    setMessages(prev => [...prev, userMessage]);
    setLoading(true);

    const callId = Date.now();
    const startTime = performance.now();

    try {
      const response = await axios.post(
        'https://cbczzwq22e.execute-api.us-east-1.amazonaws.com/prod/',
        { query: input },
        {
          headers: {
            'Content-Type': 'application/json',
            Accept: 'application/json',
          },
          withCredentials: false,
        }
      );

      const endTime = performance.now();
      const duration = ((endTime - startTime) / 1000).toFixed(2);

      const callLog = {
        id: callId,
        question: input,
        responseTime: `${duration} sec`,
        response: response.data.answer || response.data.response || 'No response.',
      };

      setCallLogs(prev => [callLog, ...prev]);

      const botMessage = {
        sender: 'bot',
        text: callLog.response,
      };

      setMessages(prev => [...prev, botMessage]);
    } catch (error) {
      const botMessage = {
        sender: 'bot',
        text: '‚ö†Ô∏è Error fetching response from server.',
      };

      const callLog = {
        id: callId,
        question: input,
        responseTime: 'Failed',
        response: 'Error fetching response.',
      };

      setCallLogs(prev => [callLog, ...prev]);
      setMessages(prev => [...prev, botMessage]);
      console.error('API Error:', error);
    }

    setLoading(false);
    setInput('');
  };

  return (
    <div className="min-h-screen bg-[#f7f7f8] flex flex-col items-center p-4">
      <div className="w-full max-w-2xl bg-white shadow-lg rounded-2xl flex flex-col flex-1 overflow-hidden">
        <div className="bg-[#ececf1] py-4 px-6 text-lg font-semibold border-b">
          üõ†Ô∏è Company Assistant (Like ChatGPT)
        </div>

        <div className="flex-1 overflow-y-auto p-4 space-y-4">
          {messages.map((msg, idx) => (
            <div
              key={idx}
              className={`p-3 rounded-xl ${
                msg.sender === 'user'
                  ? 'bg-blue-100 self-end text-right'
                  : 'bg-gray-200 self-start'
              }`}
            >
              {msg.text}
            </div>
          ))}
          {loading && (
            <div className="bg-gray-200 p-3 rounded-xl self-start animate-pulse">
              Bot is thinking...
            </div>
          )}
          <div ref={chatEndRef} />
        </div>

        <div className="flex border-t p-4 space-x-2">
          <input
            type="text"
            value={input}
            onChange={e => setInput(e.target.value)}
            onKeyDown={e => e.key === 'Enter' && handleSend()}
            placeholder="Ask your question..."
            className="flex-1 border rounded-xl px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-400"
          />
          <button
            onClick={handleSend}
            disabled={loading}
            className="bg-blue-600 text-white rounded-xl px-4 py-2 hover:bg-blue-700 disabled:opacity-50"
          >
            Send
          </button>
        </div>
      </div>

      <div className="w-full max-w-2xl mt-6 bg-white shadow-lg rounded-2xl overflow-hidden">
        <div className="bg-[#ececf1] py-3 px-5 font-semibold text-sm border-b">
          üìä API Call Logs (Shows How Many Calls for Each Indirect Question)
        </div>
        <div className="p-4 text-sm max-h-64 overflow-y-auto space-y-3">
          {callLogs.length === 0 && <div>No API calls yet.</div>}
          {callLogs.map(log => (
            <div key={log.id} className="border rounded-lg p-2 bg-gray-50">
              <div><strong>Q:</strong> {log.question}</div>
              <div><strong>Response Time:</strong> {log.responseTime}</div>
              <div><strong>Response:</strong> {log.response.slice(0, 200)}{log.response.length > 200 ? '...' : ''}</div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Landingpage;
