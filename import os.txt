package com.example.osif_java_cg_candidate.service;
 
import com.example.osif_java_cg_candidate.model.Candidate;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
 
import java.util.List;
 
import static org.junit.jupiter.api.Assertions.*;
 
public class CandidateServiceTest {
 
    private CandidateService candidateService;
    private Candidate candidate;
 
    @BeforeEach
    void setUp() {
        candidateService = new CandidateService();
        candidate = new Candidate();
        candidate.setCandidateId("1");
        candidate.setCandidateName("John Doe");
        candidate.setCandidateSkills("Java");
        candidate.setCandAvailability("2025-07-25T10:00:00");
    }
 
    @Test
    void testAddCandidate() {
        Candidate savedCandidate = candidateService.addCandidate(candidate);
        assertNotNull(savedCandidate);
        assertEquals("John Doe", savedCandidate.getCandidateName());
    }
 
    @Test
    void testGetCandidate() {
        candidateService.addCandidate(candidate);
        Candidate foundCandidate = candidateService.getCandidate(candidate.getCandidateId());
 
        assertNotNull(foundCandidate);
        assertEquals("John Doe", foundCandidate.getCandidateName());
    }
 
    @Test
    void testGetAllCandidates() {
        candidateService.addCandidate(candidate);
        List<Candidate> foundCandidates = candidateService.getAllCandidates();
        assertFalse(foundCandidates.isEmpty());
        assertEquals(1, foundCandidates.size());
        assertEquals("John Doe", foundCandidates.get(0).getCandidateName());
    }
}




-----------------------------------------------------------

package com.example.osif_java_cg_candidate.service;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

@ExtendWith(MockitoExtension.class)
public class CandidateServiceTest {

    @InjectMocks
    private CandidateService candidateService;

    @Mock
    private Candidate candidateMock;

    @BeforeEach
    void setUp() {
        // Setup necessary mock behavior and initializations here
    }

    @Test
    void testAddCandidate() {
        when(candidateService.addCandidate(candidateMock)).thenReturn(candidateMock);
        Candidate result = candidateService.addCandidate(candidateMock);
        assertNotNull(result);
        verify(candidateService).addCandidate(candidateMock);
    }

    @Test
    void testGetCandidate() {
        Long candidateId = 1L;
        when(candidateService.getCandidate(candidateId)).thenReturn(candidateMock);
        Candidate result = candidateService.getCandidate(candidateId);
        assertNotNull(result);
        verify(candidateService).getCandidate(candidateId);
    }

    @Test
    void testGetAllCandidates() {
        List<Candidate> candidates = new ArrayList<>();
        candidates.add(candidateMock);
        when(candidateService.getAllCandidates()).thenReturn(candidates);
        List<Candidate> result = candidateService.getAllCandidates();
        assertFalse(result.isEmpty());
        assertEquals(1, result.size());
        verify(candidateService).getAllCandidates();
    }
}

 
