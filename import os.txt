# RAML Specification for RedeemPoint API

## 1. Metadata
```yaml
#%RAML 1.0
title: RedeemPoint API
version: 1.0
baseUri: http://api.example.com/{version}
mediaType: application/json
protocols: [HTTP, HTTPS]
```

## 2. Types
### Define data types using external fragments
```yaml
types:
  RedeemRequest: !include types/RedeemRequest.raml
  RedeemResponse: !include types/RedeemResponse.raml
  CommonErrorResponse: !include types/CommonErrorResponse.raml
```

## 3. Resources
```yaml
/redeemPoint:
  post:
    description: Pass redeem amount to ABC
    body:
      application/json:
        type: RedeemRequest
        example: !include examples/RedeemRequestExample.json
    responses:
      200:
        body:
          application/json:
            type: RedeemResponse
            example: !include examples/RedeemResponseExample.json
      400:
        body:
          application/json:
            type: CommonErrorResponse
            example: !include examples/CommonErrorResponseExample.json
```

## 4. Query Parameters
```yaml
# No query parameters for this API
```

## 5. URI Parameters
```yaml
# No URI parameters for this API
```

## 6. Responses
### Response and error structures are defined in the types section and referenced here.

## 7. Security Schemes
```yaml
securitySchemes:
  oauth_2_0:
    description: |
      OAuth 2.0 security. 
    type: OAuth 2.0
    describedBy:
      headers:
        Authorization:
          description: Used to send a valid OAuth 2.0 Access Token.
          type: string
    settings:
      authorizationUri: https://example.com/oauth/authorize
      accessTokenUri: https://example.com/oauth/token
      authorizationGrants: [ authorization_code, client_credentials ]
```

## 8. Modularization
### DataType and Error Response are modularized as fragments in separate files.

## 9. Sample Requests and Responses
### Included as external files.

## 10. Documentation of Filtering, Sorting, Searching
```yaml
# This API does not support filtering, sorting or searching.
```

## 11. Common Error Structures
### Defined in `CommonErrorResponse` type fragment.

This RAML specification provides a clear, structured, and detailed description of the RedeemPoint API, including security, request, and response formats, and modularization of data types and error responses.
