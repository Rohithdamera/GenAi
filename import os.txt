import gradio as gr
from langgraph.prebuilt import create_react_agent
from langchain_openai import AzureChatOpenAI
from langchain_core.messages import HumanMessage, AIMessage
from langchain_core.tools import tool
from langchain.callbacks.tracers import ConsoleCallbackHandler
from langchain_community.callbacks import get_openai_callback
import io
import sys

#create a local reference to remote llm model
llm = AzureChatOpenAI(
    deployment_name="gpt-4_complex_conversions",
    azure_endpoint="https://testopenaiassets.openai.azure.com",
    openai_api_key="",
    openai_api_version="2025-01-01-preview",
    #verbose=False
)






agent = create_react_agent(
    model=llm,
    tools=[save_graph_png],
    # Add verbose=True to enable logging
    verbose=True
)

# Define the chatbot function
def chat_with_agent(message, history):
    messages = []
    for user_msg, bot_msg in history:
        messages.append(HumanMessage(content=user_msg))
        messages.append(AIMessage(content=bot_msg))
    messages.append(HumanMessage(content=message))

    try:
        with get_openai_callback() as cb: # Use the callback context manager
            result = agent.invoke(
                {"messages": messages},
                config={"callbacks": [ConsoleCallbackHandler()]}
            )
            final_response = result["messages"][-1].content
            # Append the token usage and cost information to the final_response
            final_response += "\n\n--- Token Usage ---"
            final_response += f"\nTotal Tokens: {cb.total_tokens}"
            final_response += f"\nPrompt Tokens: {cb.prompt_tokens}"
            final_response += f"\nCompletion Tokens: {cb.completion_tokens}"
            final_response += f"\nTotal Cost (USD): ${format(cb.total_cost, '.6f')}"
    finally:
         print("+++")

  
    return final_response




# Create the Gradio interface
chatbot_ui = gr.ChatInterface(
    fn=chat_with_agent,
    title=" OSIF Co-Developer",
    description="Your co-developer for OSIF development",
    theme="default"
)

# Launch the app
chatbot_ui.launch(debug=False)


