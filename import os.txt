import openai
import urllib.request
import json

# OpenAI Azure configuration
openai.api_type = "azure"
openai.api_key = "123erfgfrewqwerftyuytrewqwwwwwwwwwwwwwwefghbvfdertyhgfd"
openai.api_base = "https://testopenai.azure.com"
openai.api_version = "2024-08-01-preview"

# API endpoint and credentials
api_url = (
    "https://anypoint.mulesoft.com/mocking/api/v1/sources/exchange/assets/"
    "68ef9520-24e9-4cf2-b2f5-620025690913/training-american-flights-api/"
    "2.0.5/m/flights?destination=SFO"
)
client_id = "12345"
client_secret = "12345"

# Prompt for OpenAI to generate test payloads
openai_prompt = (
    "Analyze the following API response and generate example test payloads "
    "that match its structure and content. These should be suitable for testing."
)

# Function to get data from external API using authentication headers
def fetch_api_response(url, client_id, client_secret):
    try:
        headers = {
            "Accept": "application/json",
            "Content-Type": "application/json",
            "client_id": client_id,
            "client_secret": client_secret
        }

        request = urllib.request.Request(url, headers=headers)
        with urllib.request.urlopen(request) as response:
            return response.read().decode("utf-8")

    except urllib.error.HTTPError as e:
        print(f"HTTP Error {e.code}: {e.reason}")
        if e.fp:
            print("Details:", e.fp.read().decode())
        return None
    except Exception as e:
        print("Error accessing external API:", e)
        return None

# Function to generate test payloads using OpenAI
def generate_test_payloads(api_response):
    try:
        chat_response = openai.ChatCompletion.create(
            deployment_id="Fourth_Chatbot",
            messages=[
                {"role": "system", "content": openai_prompt},
                {"role": "user", "content": f"API response:\n{api_response}"}
            ],
            max_tokens=1000,
            temperature=0.5
        )
        generated_content = chat_response["choices"][0]["message"]["content"]
        print("Generated Test Payloads:\n")
        print(generated_content)
    except Exception as e:
        print("Error generating test payloads:", e)

# Main execution
def main():
    api_response = fetch_api_response(api_url, client_id, client_secret)
    if api_response:
        generate_test_payloads(api_response)
    else:
        print("No response received from the API.")

# Run the script
main()
